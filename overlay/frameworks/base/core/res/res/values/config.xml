<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (c) 2009, The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Whether camera shutter sound is forced or not  (country specific). -->
    <bool name="config_camera_sound_forced">true</bool>

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- Flag specifying whether VoLTE is available on device -->
    <bool name="config_device_volte_available">true</bool>

    <!-- Flag specifying whether VT is available on device -->
    <bool name="config_device_vt_available">true</bool>

    <!-- If true, the doze component is not started until after the screen has been turned off
         and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOffByDefault">true</bool>

    <!-- Whether to enable network location overlay which allows network
         location provider to be replaced by an app at run-time. When disabled,
         only the config_networkLocationProviderPackageName package will be
         searched for network location provider, otherwise packages whose
         signature matches the signatures of config_locationProviderPackageNames
         will be searched, and the service with the highest version number will
         be picked. Anyone who wants to disable the overlay mechanism can set it
         to false.
    -->
    <bool name="config_enableNetworkLocationOverlay">false</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- Is the device capable of hot swapping an ICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- reference volume index for music stream to limit headphone volume and display warning -->
    <integer name="config_safe_media_volume_index">18</integer>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Whether device supports double tap to wake -->
    <bool name="config_supportDoubleTapWake">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- Config determines whether to update phone object when voice registration
         state changes. Voice radio tech change will always trigger an update of
         phone object irrespective of this config -->
    <bool name="config_switch_phone_on_voice_reg_state_change">false</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true-->
    <bool name="skip_restoring_network_selection">true</bool>

    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)
         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux
         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).
         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>3.5077</item>
        <item>6.8394</item>
        <item>15.2619</item>
        <item>30.2619</item>
        <item>40.671</item>
        <item>52.3019</item>
        <item>65.2512</item>
        <item>77.37</item>
        <item>90.152</item>
        <item>100.297</item>
        <item>110.385</item>
        <item>135.064</item>
        <item>160.5179</item>
        <item>195.0267</item>
        <item>380.2814</item>
        <item>409.2867</item>
        <item>427.6287</item>
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.
         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0482</item>
        <item>2.7841</item>
        <item>3.79505</item>
        <item>4.4748</item>
        <item>5.08</item>
        <item>6.4233</item>
        <item>8.0848</item>
        <item>11.6607</item>
        <item>13.2347</item>
        <item>15.0676</item>
        <item>16.8302</item>
        <item>18.4261</item>
        <item>20.3103</item>
        <item>21.9042</item>
        <item>23.5456</item>
        <item>25.2137</item>
        <item>27.1769</item>
        <item>28.9571</item>
        <item>30.5244</item>
        <item>32.3535</item>
        <item>34.0867</item>
        <item>42.366</item>
        <item>51.1309</item>
        <item>59.52</item>
        <item>67.744</item>
        <item>75.9738</item>
        <item>84.6332</item>
        <item>94.1525</item>
        <item>102.2207</item>
        <item>110.4878</item>
        <item>117.0405</item>
        <item>124.3733</item>
        <item>130.9928</item>
        <item>140.4247</item>
        <item>149.3156</item>
        <item>157.1995</item>
        <item>165.3651</item>
        <item>173.2726</item>
        <item>181.4272</item>
        <item>189.1402</item>
        <item>197.5334</item>
        <item>205.6301</item>
        <item>213.9381</item>
        <item>222.2769</item>
        <item>230.0891</item>
        <item>238.6084</item>
        <item>246.5399</item>
        <item>255.6544</item>
        <item>263.6221</item>
        <item>271.9324</item>
        <item>279.1449</item>
        <item>288.5736</item>
        <item>297.6628</item>
        <item>306.1899</item>
        <item>314.4511</item>
        <item>322.1404</item>
        <item>330.969</item>
        <item>338.2251</item>
        <item>346.2251</item>
        <item>354.567</item>
        <item>370.799</item>
        <item>413.1738</item>
        <item>415.6397</item>
        <item>417.264</item>
        <item>419.264</item>
        <item>421.264</item>
        <item>424.646</item>
        <item>427.6287</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.
         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>0</item>
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>11</item>
        <item>12</item>
        <item>13</item>
        <item>14</item>
        <item>15</item>
        <item>16</item>
        <item>17</item>
        <item>18</item>
        <item>19</item>
        <item>20</item>
        <item>25</item>
        <item>30</item>
        <item>35</item>
        <item>40</item>
        <item>45</item>
        <item>50</item>
        <item>55</item>
        <item>60</item>
        <item>65</item>
        <item>70</item>
        <item>75</item>
        <item>80</item>
        <item>85</item>
        <item>90</item>
        <item>95</item>
        <item>100</item>
        <item>105</item>
        <item>110</item>
        <item>115</item>
        <item>120</item>
        <item>125</item>
        <item>130</item>
        <item>135</item>
        <item>140</item>
        <item>145</item>
        <item>150</item>
        <item>155</item>
        <item>160</item>
        <item>165</item>
        <item>170</item>
        <item>174</item>
        <item>179</item>
        <item>184</item>
        <item>189</item>
        <item>194</item>
        <item>199</item>
        <item>204</item>
        <item>209</item>
        <item>214</item>
        <item>219</item>
        <item>224</item>
        <item>229</item>
        <item>234</item>
        <item>239</item>
        <item>244</item>
        <item>249</item>
        <item>255</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>250</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>400</item>
        <item>500</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>300</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.
         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">184</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">300%</fraction>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">599</integer>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.
         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- The bounding path of the cutout region of the main built-in display.
         Must either be empty if there is no cutout region, or a string that is parsable by
         {@link android.util.PathParser}.
    
         The path is assumed to be specified in display coordinates with pixel units and in
         the display's native orientation, with the origin of the coordinate system at the
         center top of the display.
    
         To facilitate writing device-independent emulation overlays, the marker `@dp` can be
         appended after the path string to interpret coordinates in dp instead of px units.
         Note that a physical cutout should be configured in pixels for the best results.
    -->
    <string name="config_mainBuiltInDisplayCutout">M84.0014003,76.0002722 C39.8036856,75.9997279 11.8039716,75.9996372 0.00225823708,76 C-11.8004588,76.0003629 -39.8012115,76.0004536 -84,76.0002722 L-84,-4.19220214e-13 L84.0014003,-4.19220214e-13 L84.0014003,76.0002722 Z</string>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
    <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array name="config_tether_upstream_types">
        <item>1</item>
        <item>0</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array name="config_defaultPinnerServiceFiles">
        <item>/system/framework/framework.jar</item>
        <item>/system/framework/services.jar</item>
        <item>/apex/com.android.media/javalib/updatable-media.jar</item>
        <item>/apex/com.android.art/javalib/core-oj.jar</item>
        <item>/apex/com.android.art/javalib/core-libart.jar</item>
        <item>/system_ext/priv-app/SystemUI/SystemUI.apk</item>
        <item>/system/bin/surfaceflinger</item>
        <item>/system/lib64/libRS.so</item>
        <item>/system/lib64/libRSCpuRef.so</item>
        <item>/system/lib64/libRSDriver.so</item>
        <item>/system/lib64/libRS_internal.so</item>
        <item>/system/lib64/libRScpp.so</item>
        <item>/system/lib64/libbcinfo.so</item>
        <item>/system/lib64/libblas.so</item>
    </string-array>

    <!-- Should the pinner service pin the Camera application? -->
    <bool name="config_pinnerCameraApp">true</bool>

    <!-- Enable Zram writeback feature to allow unused pages in zram be written to flash. -->
    <bool name="config_zramWriteback">true</bool>

    <!-- True if Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array name="config_tether_bluetooth_regexs">
        <item>bt-pan</item>
        <item>bt-dun</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array name="config_tether_usb_regexs">
        <item>rndis\\d</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array name="config_tether_wifi_regexs">
        <item>ap\\d</item>
    </string-array>

    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,300000,true</item>
        <item>mobile_supl,3,0,2,60000,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>mobile_fota,10,0,2,60000,true</item>
        <item>mobile_ims,11,0,-1,-1,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>bluetooth,7,7,2,-1,true</item>
        <item>ethernet,9,9,4,-1,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>mobile_ia,14,0,2,-1,true</item>
        <item>mobile_emergency,15,0,2,-1,true</item>
        <item>mobile_dm,20,0,3,60000,true</item>
        <item>mobile_wap,21,0,3,60000,true</item>
        <item>mobile_net,22,0,3,60000,true</item>
        <item>mobile_cmmail,23,0,3,60000,true</item>
        <item>mobile_rcse,24,0,3,60000,true</item>
        <item>mobile_xcap,25,0,3,60000,true</item>
        <item>mobile_rcs,26,0,3,60000,true</item>
        <item>mobile_bip,27,0,3,60000,true</item>
        <item>mobile_vsim,28,0,-1,60000,true</item>
        <item>mobile_preempt,29,0,9,60000,true</item>
        <item>wifi_slave,30,1,0,-1,true</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                  [# simultaneous connection types]"  -->
    <string-array name="radioAttributes">
        <item>1,1</item>
        <item>0,1</item>
        <item>7,1</item>
        <item>9,1</item>
    </string-array>

    <!-- Height of the status bar -->
    <dimen name="status_bar_height_default">78.0px</dimen>
    <dimen name="status_bar_height_portrait">78.0px</dimen>
    <dimen name="status_bar_height_landscape">24.0dp</dimen>

    <!-- Rounded corner padding and radius -->
    <dimen name="rounded_corner_radius_top">95.0px</dimen>
    <dimen name="rounded_corner_radius_bottom">90.0px</dimen>

    <!-- Haptic -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>35</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>35</item>
        <item>0</item>
        <item>0</item>
    </integer-array>

    <integer-array name="config_keyboardTapVibePattern">
        <item>35</item>
    </integer-array>

    <!-- The default journal mode to use use when Write-Ahead Logging is not active.
         Choices are: OFF, DELETE, TRUNCATE, PERSIST and MEMORY.
         PERSIST may improve performance by reducing how often journal blocks are
         reallocated (compared to truncation) resulting in better data block locality
         and less churn of the storage media.
         The PERSIST mode results in data persisting in the journal beyond the life of
         a transaction, so it interacts poorly with SECURE_DELETE. -->
    <string name="db_default_journal_mode">MEMORY</string>

    <!-- The database synchronization mode when using the default journal mode.
         FULL is safest and preserves durability at the cost of extra fsyncs.
         NORMAL also preserves durability in non-WAL modes and uses checksums to ensure
         integrity although there is a small chance that an error might go unnoticed.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_default_sync_mode">OFF</string>

    <!-- The database synchronization mode when using Write-Ahead Logging.
         From https://www.sqlite.org/pragma.html#pragma_synchronous:
         WAL mode is safe from corruption with synchronous=NORMAL, and probably DELETE mode is safe
         too on modern filesystems. WAL mode is always consistent with synchronous=NORMAL, but WAL
         mode does lose durability. A transaction committed in WAL mode with
         synchronous=NORMAL might roll back following a power loss or system crash.
         Transactions are durable across application crashes regardless of the synchronous setting
         or journal mode. The synchronous=NORMAL setting is a good choice for most applications
         running in WAL mode.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_wal_sync_mode">OFF</string>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false" >
    <!-- ID0:Fingerprint:Strong -->
        <item>0:2:15</item>
    </string-array>

    <!-- Remove Mtk Ims app from privacy (location) indicators -->
    <string name="config_systemAudioIntelligence" translatable="false">com.mediatek.ims</string>
</resources>
